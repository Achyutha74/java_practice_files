/*
Input: s = "abcdefghi", k = 3, fill = "x"
Output: ["abc","def","ghi"]
Explanation:
The first 3 characters "abc" form the first group.
The next 3 characters "def" form the second group.
The last 3 characters "ghi" form the third group.
Since all groups can be completely filled by characters from the string, we do not need to use fill.
Thus, the groups formed are "abc", "def", and "ghi".
*/

class Solution {
    public String[] divideString(String s, int k, char fill) {
        int n = s.length();
        int totalGroups = (n + k - 1) / k; // Ceiling division to get number of groups
        String[] res = new String[totalGroups];
        int index = 0;

        for (int i = 0; i < totalGroups; i++) {
            StringBuilder group = new StringBuilder();

            for (int j = 0; j < k; j++) {
                if (index < n) {
                    group.append(s.charAt(index++));
                } else {
                    group.append(fill);
                }
            }

            res[i] = group.toString();
        }

        return res;
    }
}
